@using LanguageResource;
@using PagedList.Mvc;
@using Ishop.Models.PubDataModal;
@using Ishop.Utilities;
@model PagedList.IPagedList<SourceStatistic>
@{
    ViewBag.Title = Lang.InfoIPstatitics_Title;
    ViewBag.SubTitle = Lang.InfoIPstatitics_SubTitle;
}
@Styles.Render("~/AdminLTE/plugins/daterangepicker/css")
@Styles.Render("~/AdminLTE/plugins/timepicker/css")
@Scripts.Render("~/AdminLTE/plugins/timepicker/js")
@Scripts.Render("~/AdminLTE/plugins/daterangepicker/js")
<script src="~/js/Info/IPstatitics.js"></script>
<style>
    .text-omit-defined-ipstate {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        max-width: 200px;
        -webkit-box-orient: vertical;
    } 
    
</style>
@using (Html.BeginForm("InfoIPstatitics", "Info", FormMethod.Get, new { @class = "form-horizontal" }))
{
    <div id="box-widget" class="box-header form-inline block">
        <label class="label label-info btn-flat" for="SearchString">@Lang.Views_GeneralUI_Find</label>
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", style = "max-width:120px;" })
        @Html.TextBox("StartDate", ViewBag.CurrentStartDate as string, new { @class = "form-control h6", style = "max-width:150px;" })
        <label class="label label-info btn-flat" for="SearchString">TO</label>
        @Html.TextBox("EndDate", ViewBag.CurrentEndDate as string, new { @class = "form-control h6", style = "max-width:150px;" })
        <input type="submit" class="btn btn-info" value="@Lang.Views_GeneralUI_Search" />  <input type="button" id="ClearInvalid" class="btn btn-info" onclick="javascript: ClearInvalidData();" value="@Lang.Views_GeneralUI_Arrange" />
    </div>
}

<div class="box-body  table-responsive">

    <table class="table table-striped table-hover">
        <tr> 
            <th>
                <i class="fa fa-caret-square-o-right" aria-hidden="true" style="color:mediumslateblue"></i><lable>KeyID</lable>
            </th>
            <th>
                <i class="fa fa-caret-square-o-right" aria-hidden="true" style="color:mediumslateblue"></i><lable>@Html.DisplayNameFor(modelItem => modelItem.First().Title)</lable>
            </th>
            <th>
                <i class="fa fa-user-secret" aria-hidden="true" style="color:mediumslateblue"></i><lable>@Html.DisplayNameFor(modelItem => modelItem.First().UserId)</lable>
            </th>
            <th>
                <i class="fa fa-money" aria-hidden="true" style="color:mediumslateblue"></i><lable>IP</lable>
            </th>
            <th>
                <i class="fa fa-square-o" aria-hidden="true" style="color:mediumslateblue"></i><lable>@Html.DisplayNameFor(modelItem => modelItem.First().SourceArea)</lable>
            </th>
            <th>
                <i class="fa fa-square-o" aria-hidden="true" style="color:mediumslateblue"></i><lable title="@Lang.Info_InfoIPstatitics_Duration_ToolTips">@Html.DisplayNameFor(modelItem => modelItem.First().Duration)</lable>
            </th>
            <th>
                <i class="fa fa-square-o" aria-hidden="true" style="color:mediumslateblue"></i><lable title="@Lang.Info_InfoIPstatitics_LoadTime_ToolTips">@Html.DisplayNameFor(modelItem => modelItem.First().LoadTime)</lable>
            </th>
            <th>
                <i class="fa fa-calendar-check-o" aria-hidden="true" style="color:mediumslateblue"></i><lable>@Html.DisplayNameFor(modelItem => modelItem.First().CreatedDate)</lable>
                @Html.ActionLink("∨", "InfoIPstatitics", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter }, new { title = Lang.Views_GeneralUI_Datetime })
            </th>
            <th>
                <i class="fa fa-calendar-check-o" aria-hidden="true" style="color:mediumslateblue"></i><lable>@Html.DisplayNameFor(modelItem => modelItem.First().LastUpdateDate)</lable>
                @Html.ActionLink("∨", "InfoIPstatitics", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter }, new { title = Lang.Views_GeneralUI_Datetime })
            </th>
        </tr>
        @foreach (var item in Model)
        {
            <tr> 
                <td class="small">
                    @Html.DisplayFor(modelItem => item.SourceStatisticsID)<br />
                    @Html.DisplayFor(modelItem => item.TableKeyID)
                </td>
                <td class="small">
                    <ul class="list-unstyled list-inline no-padding no-margin">
                        <li>
                            <ul class="list-unstyled no-padding no-margin" >
                                <li title="openid:@item.OpenID" data-toggle="tooltip">
                                    @Html.DisplayFor(modelItem => item.WxNickName)
                                </li>
                                <li>
                                    @Html.Raw(HttpUtility.HtmlDecode(mvcCommeBase.RenderImg(item.VisitorIcon, "30px")))
                                </li>
                            </ul>
                        </li>
                        <li>
                            @if (!string.IsNullOrEmpty(item.OpenID))
                            {
                                <a href="~/i/RetriveWeixinInfo/@item.SourceStatisticsID" target="_blank"><span class="text-omit-defined-ipstate small" title="@item.SourceUrl" data-toggle="tooltip">@Html.DisplayFor(modelItem => item.Title) </span></a>
                            }
                            else
                            {
                                <span class="text-omit-defined-ipstate small" title="@item.SourceUrl" data-toggle="tooltip">@Html.DisplayFor(modelItem => item.Title) </span>
                            }

                        </li>
                    </ul>

                    
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td data_toggle="tooltip" title="@Html.DisplayFor(modelItem => item.SourceArea)" class="small">
                    @Html.DisplayFor(modelItem => item.IP)<br>
                    @Html.DisplayFor(modelItem => item.OSVersion)
                </td>
                <td data_toggle="tooltip" title="@Html.DisplayFor(modelItem => item.SourceArea)">
                    <div id="SourceArea_@Html.DisplayFor(modelItem => item.SourceStatisticsID).ToString()" class="small">
                        @Html.DisplayFor(modelItem => item.SourceArea)
                        <script>
                           var SourceAreaName = IpSourceAreaQuery('@Html.DisplayFor(modelItem => item.SourceStatisticsID)','@Html.DisplayFor(modelItem => item.IP)');
                        </script>
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Duration)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LoadTime)
                </td>
                <td class="small">
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td class="small">
                    @Html.DisplayFor(modelItem => item.LastUpdateDate)
                </td>
            </tr>
        }
    </table>
</div>

@{
    if (Model.PageCount > 1)
    {
        <div class="container">
            <label>@string.Format(Lang.GeneralUI_PagerInfo, Model.PageNumber, Model.PageCount, Model.PageCount, Model.Count)</label>
            @Html.PagedListPager(Model, page => Url.Action("InfoIPstatitics", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div> 
    }
}

<script>
    $(document).ready(function () {
        datepickerRender("#StartDate"); // Initialization date
        datepickerRender("#EndDate");
        $('[data-toggle="tooltip"]').tooltip(); //Initialization prompt style
        $("#alert_Ins_Succ").toggle();
    });
</script>

<script>
    function datepickerRender(ID) {
        $(ID).daterangepicker({
            "singleDatePicker": true,
            "showDropdowns": true,
            "timePicker": true,
            "locale": {
                "format": "YYYY-MM-DD",
                "separator": " - ",
                "applyLabel": "OK",
                "cancelLabel": "Cancel",
                "fromLabel": "From",
                "toLabel": "To",
                "customRangeLabel": "Custom",
                "weekLabel": "W",
                "daysOfWeek": [
                    "Su",
                    "Mo",
                    "Tu",
                    "We",
                    "Th",
                    "Fr",
                    "Sa"
                ],
                "monthNames": [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                ],
                "firstDay": 1
            },
            "linkedCalendars": false,
            "showCustomRangeLabel": false,
            "startDate": moment(),
            "endDate": moment()
        }, function (start, end, label) {
            $(ID).val(start.format('@Lang.Views_GeneralUI_DateTimeFormat')); // Date Time Formate
        });
    }
</script>
<script>
    var post_flag = false;
    function ClearInvalidData() {
        $("#ClearInvalid").attr("value","@Lang.Views_GeneralUI_Loading");
        if (post_flag) { 
            alert("@Lang.Views_GeneralUI_DontRepeateSubmit"); 
            return; 
        }  
        post_flag = true;
        $.ajax({
            url: "/Mgr/info/ClearInvalidData",
            type: "post",
            success: function (data) {
                console.log("@Lang.Info_InfoIPstatitics_ClearInvalidData_Title" + JSON.stringify(data));
                console.log(data.Message);
                post_flag = false;
                $("#ClearInvalid").attr("value","@Lang.Views_GeneralUI_Arrange");
                return BootstrapDialog.show({
                    cssClass: 'bootstrap-dialog fade',
                    title:"@Lang.Info_InfoIPstatitics_ClearInvalidData_Content",
                    message: data.Message,
                    buttons: [{
                        label: 'OK',
                        action: function (dialog) {
                            dialog.close();
                            return false;
                        }
                    }]
                });//BootstrapDialog 
            }
        });//end ajax get json data
    }
</script>