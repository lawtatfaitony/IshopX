@using LanguageResource;
@model Ishop.Models.User.BlockList
@{
    Layout = null;
}

@using (Ajax.BeginForm("IsBlockPhoneNumber", "User", new AjaxOptions { HttpMethod = "post", OnSuccess = "HandleIsBlockPhoneNumber", OnFailure = "err", LoadingElementId = "Loading" }, new { id = "form1", @class = "form-horizontal  bg-gray-light" }))
{
    <div id="Loading" class="hidden"><i class="fa fa-circle-o-notch fa-spin fa-2x fa-fw"></i><span class="sr-only">Loading...</span></div>

    @Html.AntiForgeryToken()

    <div id="box-widget" class="box  box-default box-solid">
        <div class="box-header with-border">
            <h3 class="box-title">@Lang.IsBlockPhoneNumber_Boxtitle</h3>
            <div class="box-tools pull-right">
                <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                <button class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
            </div><!-- /.box-tools -->
        </div><!-- /.box-header -->
        <div class="box-body">
            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "col-sm-4 control-label h4" })
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control h4", placeholder = Html.DisplayNameFor(m => m.Name) })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-sm-4 control-label h4" })
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control h4", placeholder = Html.DisplayNameFor(m => m.PhoneNumber) })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-sm-4 control-label h4" })
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control h4", placeholder = Html.DisplayNameFor(m => m.Email) })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Remarks, new { @class = "col-sm-4 control-label h4" })
                <div class="col-sm-6">
                    @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control h4", rows = 5, placeholder = Html.DisplayNameFor(m => m.Remarks) })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="box-footer">
            <div id="err_message"></div>
            &nbsp;&nbsp;<input type="submit" id="Savechanges" class="btn btn-default bg-navy-active col-sm-offset-4" value="@Lang.Views_GeneralUI_Block" />
        </div>
    </div>

}
<script>

    function HandleIsBlockPhoneNumber(data) {
        BootstrapDialog.show({
            type: BootstrapDialog.TYPE_SUCCESS,
            autospin: true,
            opacity: 0,
            resizable: true,
            size: 'size-normal',
            closeByBackdrop: true,
            closeByKeyboard: false,
            draggable: true,
            closable: true,
            title: "@Lang.Views_GeneralUI_OperateInfo",
            message: "<H3>" + data.Message + "</H3>",
            cssClass: 'bootstrap-dialog fade',
            buttons: [{
                label: 'OK!',
                cssClass: 'btn-primary',
                action: function (dialog) {
                    dialog.close();
                }
            }]
        });
    }
    function err(data) {
        alert("@Lang.IsBlockPhoneNumber_JS_Boxtitle ([HttpPost]IsBlockPhoneNumber)");
        $("#err_messages").html("@Lang.Views_GeneralUI_ServerError,Funtion([HttpPost]IsBlockPhoneNumber)<br>,Failed to load resource: the server responded with a status of 500 (Internal Server Error)");
    }
</script>
